# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VU-M8dYIj1M1jMyIqBsNyAenCDwspKI0

**Making a Dashboard for udemy courses**

Importing libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix

"""Mounting G-Drive so that data is inserted"""

from google.colab import drive
drive.mount('/content/drive')

"""Reading the .csv file """

df = pd.read_csv('/content/drive/MyDrive/udemy_courses.csv')

"""Taking the data of first 10 courses"""

print(df.head(10))

"""Printing the prices of the first 10 courses"""

print(df['price'].head(10))

"""Plotting the prices of first 10 courses in Pie-chart"""

labels = 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'c10'
sections = [200, 75, 45, 95, 200, 150, 65, 95, 195, 200]
explode = [0.1,0,0,0,0.1,0,0,0,0,0.05]

plt.pie(sections, labels=labels,
        explode = explode,
        startangle=90, #sets the starting angle as 90 degree
        autopct = '%1.2f%%')

plt.axis('equal') 
plt.title('First 10 Course Prices')
plt.show()

"""Plotting the data of first 10 Subscribed courses using bar-graph"""

#Setting data as key:value pairs
data = {'Ultimate Investment Banking Course':2147,
'Complete GST Course & Certification - Grow Your CA Practice':2792,
'Financial Modeling for Business Analysts and Consultants':2174,
'Beginner to Pro - Financial Analysis in Excel 2017':2451,
'How To Maximize Your Profits Trading Options':1276,
'Trading Penny Stocks: A Guide for All Levels In 2017':9221,
'Investing And Trading For Beginners: Mastering Price Charts':1540,
'Trading Stock Chart Patterns For Immediate, Explosive Gains':2917,
'Options Trading 3 : Advanced Stock Profit and Success Method':5172,
'The Only Investment Strategy You Need For Your Retirement':827}

#distributed data as keys and values  
x1 = list(data.keys())
y1 = list(data.values())

#Setting a fig size
fig, ax = plt.subplots(figsize =(16, 9))

#Setting the bar graph to horizontal axis
ax.barh(x1,y1)

#removing axes splines
for s in ['top', 'bottom', 'left', 'right']:
    ax.spines[s].set_visible(False)

#removing x,y ticks
ax.xaxis.set_ticks_position('none')
ax.yaxis.set_ticks_position('none')

#add padding between axes and labels
ax.xaxis.set_tick_params(pad = 5)
ax.yaxis.set_tick_params(pad = 10)

#adding x,y gridlines
ax.grid(b = True, color ='grey',
        linestyle ='-.', linewidth = 0.5,
        alpha = 0.2)
 
# Showing top values
ax.invert_yaxis()

#adding annotation to the bars
for i in ax.patches:
    plt.text(i.get_width()+0.2, i.get_y()+0.5,
             str(round((i.get_width()), 2)),
             fontsize = 10, fontweight ='bold',
             color ='grey')

#plt.bar(x1,y1,label='courses',color='b')
plt.plot()

plt.ylabel("Course Title")
plt.xlabel("Num of subscribers")
plt.title("Subscribers Count")
plt.show()

"""Scattering Courses according to difficulty level"""

df['level'].value_counts()

# 1.designing a pie chart
levels = 'All Levels','Beginner Level','Intermediate Level','Expert Level'
sections = [1929, 1270, 421, 58]
explode = [0.05, 0.05, 0.05, 0.05]
plt.pie(sections, explode=explode, labels=levels,
        autopct = '%1.1f%%'
        )

# 2.drawing a white circle
centre_circle = plt.Circle((0, 0), 0.85, fc='white')
fig = plt.gcf()
  
# 3.Adding Circle in Pie chart
fig.gca().add_artist(centre_circle)
  
# 4.Adding Title of chart
plt.title('Difficulty Levels of Courses')

plt.legend(levels,loc="center")
  
# 5.Displaying Chart
plt.show()

